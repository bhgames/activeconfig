#!/usr/bin/env ruby
require 'optparse'
STDERR.puts ARGV.inspect
options = {}
OptionParser.new do |opts|
  opts.banner = "Usage: active_config [options]"


  opts.on("-v", "--[no-]verbose", "Run verbosely") do |v|
    options[:verbose] = v
  end
  opts.on("-V", "--version", "display version and exit") do |v|
    options[:verbose] = v
  end

end.parse!
if options[:verbose]
  require 'yaml'
  vs=YAML.load(File.read(File.expand_path('../../VERSION.yml',__FILE__) ))
  n=[:major,:minor,:patch,:build].map{|e|vs[e]}
  n.pop if n.last.nil? or n==''
  puts n.join('.')
end
STDERR.puts ARGV.inspect
exit
# create:
#   create an etc dir
#   if a lib,ruby, or src directory exists, add a conf.rb file
#
=begin rdoc

# Prints info from  to STDOUT.
#
# Example:
#
#  > active_config httpd.httpd.domain.portal.primary httpd.httpd.domain.frontend.primary
# portal.cashnetusa.com
# www.cashnetusa.com
#
#  > ACTIVE_CONFIG_OVERLAY=gb active_config httpd.httpd.domain.portal.primary httpd.httpd.domain.frontend.primary
# portaluk.cashnetusa.com
# www.quickquid.co.uk
#
#  > ACTIVE_CONFIG_OVERLAY=gb RAILS_ENV=production active_config --PRODDB 'database[RAILS_ENV].database'
# PRODDB=activeapp_dev_uk
#  > ACTIVE_CONFIG_OVERLAY=us RAILS_ENV=production active_config --PRODDB 'database[RAILS_ENV].database'
# PRODDB=activeapp_dev

=end

require 'rubygems'

# Yuck!
RAILS_ENV = ENV['RAILS_ENV'] || 'development'

require 'active_config'

name = ''

ARGV.each do | x |
  if x =~ /^--(.+)/
    name = "#{$1}="
  else 
    puts(name + (eval(".#{x}").to_s))
  end
end

exit 0

